/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package graphene.model.idl;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class G_Workspace extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"G_Workspace\",\"namespace\":\"graphene.model.idl\",\"fields\":[{\"name\":\"active\",\"type\":\"boolean\",\"default\":true},{\"name\":\"creatorusername\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":null},{\"name\":\"json\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":null},{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"untitled\"},{\"name\":\"workspaceid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastmodified\",\"type\":[\"long\",\"null\"],\"doc\":\"workspace's modified datetime\",\"default\":0},{\"name\":\"createddate\",\"type\":[\"long\",\"null\"],\"doc\":\"workspace's created datetime\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private boolean active;
   private java.lang.String creatorusername;
   private java.lang.String json;
   private java.lang.String title;
   private java.lang.String workspaceid;
  /** workspace's modified datetime */
   private java.lang.Long lastmodified;
  /** workspace's created datetime */
   private java.lang.Long createddate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public G_Workspace() {}

  /**
   * All-args constructor.
   */
  public G_Workspace(java.lang.Boolean active, java.lang.String creatorusername, java.lang.String json, java.lang.String title, java.lang.String workspaceid, java.lang.Long lastmodified, java.lang.Long createddate) {
    this.active = active;
    this.creatorusername = creatorusername;
    this.json = json;
    this.title = title;
    this.workspaceid = workspaceid;
    this.lastmodified = lastmodified;
    this.createddate = createddate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return active;
    case 1: return creatorusername;
    case 2: return json;
    case 3: return title;
    case 4: return workspaceid;
    case 5: return lastmodified;
    case 6: return createddate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: active = (java.lang.Boolean)value$; break;
    case 1: creatorusername = (java.lang.String)value$; break;
    case 2: json = (java.lang.String)value$; break;
    case 3: title = (java.lang.String)value$; break;
    case 4: workspaceid = (java.lang.String)value$; break;
    case 5: lastmodified = (java.lang.Long)value$; break;
    case 6: createddate = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }

  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'creatorusername' field.
   */
  public java.lang.String getCreatorusername() {
    return creatorusername;
  }

  /**
   * Sets the value of the 'creatorusername' field.
   * @param value the value to set.
   */
  public void setCreatorusername(java.lang.String value) {
    this.creatorusername = value;
  }

  /**
   * Gets the value of the 'json' field.
   */
  public java.lang.String getJson() {
    return json;
  }

  /**
   * Sets the value of the 'json' field.
   * @param value the value to set.
   */
  public void setJson(java.lang.String value) {
    this.json = value;
  }

  /**
   * Gets the value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'workspaceid' field.
   */
  public java.lang.String getWorkspaceid() {
    return workspaceid;
  }

  /**
   * Sets the value of the 'workspaceid' field.
   * @param value the value to set.
   */
  public void setWorkspaceid(java.lang.String value) {
    this.workspaceid = value;
  }

  /**
   * Gets the value of the 'lastmodified' field.
   * workspace's modified datetime   */
  public java.lang.Long getLastmodified() {
    return lastmodified;
  }

  /**
   * Sets the value of the 'lastmodified' field.
   * workspace's modified datetime   * @param value the value to set.
   */
  public void setLastmodified(java.lang.Long value) {
    this.lastmodified = value;
  }

  /**
   * Gets the value of the 'createddate' field.
   * workspace's created datetime   */
  public java.lang.Long getCreateddate() {
    return createddate;
  }

  /**
   * Sets the value of the 'createddate' field.
   * workspace's created datetime   * @param value the value to set.
   */
  public void setCreateddate(java.lang.Long value) {
    this.createddate = value;
  }

  /** Creates a new G_Workspace RecordBuilder */
  public static graphene.model.idl.G_Workspace.Builder newBuilder() {
    return new graphene.model.idl.G_Workspace.Builder();
  }
  
  /** Creates a new G_Workspace RecordBuilder by copying an existing Builder */
  public static graphene.model.idl.G_Workspace.Builder newBuilder(graphene.model.idl.G_Workspace.Builder other) {
    return new graphene.model.idl.G_Workspace.Builder(other);
  }
  
  /** Creates a new G_Workspace RecordBuilder by copying an existing G_Workspace instance */
  public static graphene.model.idl.G_Workspace.Builder newBuilder(graphene.model.idl.G_Workspace other) {
    return new graphene.model.idl.G_Workspace.Builder(other);
  }
  
  /**
   * RecordBuilder for G_Workspace instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<G_Workspace>
    implements org.apache.avro.data.RecordBuilder<G_Workspace> {

    private boolean active;
    private java.lang.String creatorusername;
    private java.lang.String json;
    private java.lang.String title;
    private java.lang.String workspaceid;
    private java.lang.Long lastmodified;
    private java.lang.Long createddate;

    /** Creates a new Builder */
    private Builder() {
      super(graphene.model.idl.G_Workspace.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(graphene.model.idl.G_Workspace.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.creatorusername)) {
        this.creatorusername = data().deepCopy(fields()[1].schema(), other.creatorusername);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.json)) {
        this.json = data().deepCopy(fields()[2].schema(), other.json);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.title)) {
        this.title = data().deepCopy(fields()[3].schema(), other.title);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.workspaceid)) {
        this.workspaceid = data().deepCopy(fields()[4].schema(), other.workspaceid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lastmodified)) {
        this.lastmodified = data().deepCopy(fields()[5].schema(), other.lastmodified);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.createddate)) {
        this.createddate = data().deepCopy(fields()[6].schema(), other.createddate);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing G_Workspace instance */
    private Builder(graphene.model.idl.G_Workspace other) {
            super(graphene.model.idl.G_Workspace.SCHEMA$);
      if (isValidValue(fields()[0], other.active)) {
        this.active = data().deepCopy(fields()[0].schema(), other.active);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.creatorusername)) {
        this.creatorusername = data().deepCopy(fields()[1].schema(), other.creatorusername);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.json)) {
        this.json = data().deepCopy(fields()[2].schema(), other.json);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.title)) {
        this.title = data().deepCopy(fields()[3].schema(), other.title);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.workspaceid)) {
        this.workspaceid = data().deepCopy(fields()[4].schema(), other.workspaceid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lastmodified)) {
        this.lastmodified = data().deepCopy(fields()[5].schema(), other.lastmodified);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.createddate)) {
        this.createddate = data().deepCopy(fields()[6].schema(), other.createddate);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'active' field */
    public java.lang.Boolean getActive() {
      return active;
    }
    
    /** Sets the value of the 'active' field */
    public graphene.model.idl.G_Workspace.Builder setActive(boolean value) {
      validate(fields()[0], value);
      this.active = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'active' field has been set */
    public boolean hasActive() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'active' field */
    public graphene.model.idl.G_Workspace.Builder clearActive() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'creatorusername' field */
    public java.lang.String getCreatorusername() {
      return creatorusername;
    }
    
    /** Sets the value of the 'creatorusername' field */
    public graphene.model.idl.G_Workspace.Builder setCreatorusername(java.lang.String value) {
      validate(fields()[1], value);
      this.creatorusername = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'creatorusername' field has been set */
    public boolean hasCreatorusername() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'creatorusername' field */
    public graphene.model.idl.G_Workspace.Builder clearCreatorusername() {
      creatorusername = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'json' field */
    public java.lang.String getJson() {
      return json;
    }
    
    /** Sets the value of the 'json' field */
    public graphene.model.idl.G_Workspace.Builder setJson(java.lang.String value) {
      validate(fields()[2], value);
      this.json = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'json' field has been set */
    public boolean hasJson() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'json' field */
    public graphene.model.idl.G_Workspace.Builder clearJson() {
      json = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'title' field */
    public java.lang.String getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public graphene.model.idl.G_Workspace.Builder setTitle(java.lang.String value) {
      validate(fields()[3], value);
      this.title = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'title' field */
    public graphene.model.idl.G_Workspace.Builder clearTitle() {
      title = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'workspaceid' field */
    public java.lang.String getWorkspaceid() {
      return workspaceid;
    }
    
    /** Sets the value of the 'workspaceid' field */
    public graphene.model.idl.G_Workspace.Builder setWorkspaceid(java.lang.String value) {
      validate(fields()[4], value);
      this.workspaceid = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'workspaceid' field has been set */
    public boolean hasWorkspaceid() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'workspaceid' field */
    public graphene.model.idl.G_Workspace.Builder clearWorkspaceid() {
      workspaceid = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'lastmodified' field */
    public java.lang.Long getLastmodified() {
      return lastmodified;
    }
    
    /** Sets the value of the 'lastmodified' field */
    public graphene.model.idl.G_Workspace.Builder setLastmodified(java.lang.Long value) {
      validate(fields()[5], value);
      this.lastmodified = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'lastmodified' field has been set */
    public boolean hasLastmodified() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'lastmodified' field */
    public graphene.model.idl.G_Workspace.Builder clearLastmodified() {
      lastmodified = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'createddate' field */
    public java.lang.Long getCreateddate() {
      return createddate;
    }
    
    /** Sets the value of the 'createddate' field */
    public graphene.model.idl.G_Workspace.Builder setCreateddate(java.lang.Long value) {
      validate(fields()[6], value);
      this.createddate = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'createddate' field has been set */
    public boolean hasCreateddate() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'createddate' field */
    public graphene.model.idl.G_Workspace.Builder clearCreateddate() {
      createddate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public G_Workspace build() {
      try {
        G_Workspace record = new G_Workspace();
        record.active = fieldSetFlags()[0] ? this.active : (java.lang.Boolean) defaultValue(fields()[0]);
        record.creatorusername = fieldSetFlags()[1] ? this.creatorusername : (java.lang.String) defaultValue(fields()[1]);
        record.json = fieldSetFlags()[2] ? this.json : (java.lang.String) defaultValue(fields()[2]);
        record.title = fieldSetFlags()[3] ? this.title : (java.lang.String) defaultValue(fields()[3]);
        record.workspaceid = fieldSetFlags()[4] ? this.workspaceid : (java.lang.String) defaultValue(fields()[4]);
        record.lastmodified = fieldSetFlags()[5] ? this.lastmodified : (java.lang.Long) defaultValue(fields()[5]);
        record.createddate = fieldSetFlags()[6] ? this.createddate : (java.lang.Long) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
