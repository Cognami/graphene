/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package graphene.model.idl;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class G_Group extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"G_Group\",\"namespace\":\"graphene.model.idl\",\"fields\":[{\"name\":\"groupname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"notset\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String groupname;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public G_Group() {}

  /**
   * All-args constructor.
   */
  public G_Group(java.lang.String groupname) {
    this.groupname = groupname;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return groupname;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: groupname = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'groupname' field.
   */
  public java.lang.String getGroupname() {
    return groupname;
  }

  /**
   * Sets the value of the 'groupname' field.
   * @param value the value to set.
   */
  public void setGroupname(java.lang.String value) {
    this.groupname = value;
  }

  /** Creates a new G_Group RecordBuilder */
  public static graphene.model.idl.G_Group.Builder newBuilder() {
    return new graphene.model.idl.G_Group.Builder();
  }
  
  /** Creates a new G_Group RecordBuilder by copying an existing Builder */
  public static graphene.model.idl.G_Group.Builder newBuilder(graphene.model.idl.G_Group.Builder other) {
    return new graphene.model.idl.G_Group.Builder(other);
  }
  
  /** Creates a new G_Group RecordBuilder by copying an existing G_Group instance */
  public static graphene.model.idl.G_Group.Builder newBuilder(graphene.model.idl.G_Group other) {
    return new graphene.model.idl.G_Group.Builder(other);
  }
  
  /**
   * RecordBuilder for G_Group instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<G_Group>
    implements org.apache.avro.data.RecordBuilder<G_Group> {

    private java.lang.String groupname;

    /** Creates a new Builder */
    private Builder() {
      super(graphene.model.idl.G_Group.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(graphene.model.idl.G_Group.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.groupname)) {
        this.groupname = data().deepCopy(fields()[0].schema(), other.groupname);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing G_Group instance */
    private Builder(graphene.model.idl.G_Group other) {
            super(graphene.model.idl.G_Group.SCHEMA$);
      if (isValidValue(fields()[0], other.groupname)) {
        this.groupname = data().deepCopy(fields()[0].schema(), other.groupname);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'groupname' field */
    public java.lang.String getGroupname() {
      return groupname;
    }
    
    /** Sets the value of the 'groupname' field */
    public graphene.model.idl.G_Group.Builder setGroupname(java.lang.String value) {
      validate(fields()[0], value);
      this.groupname = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'groupname' field has been set */
    public boolean hasGroupname() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'groupname' field */
    public graphene.model.idl.G_Group.Builder clearGroupname() {
      groupname = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public G_Group build() {
      try {
        G_Group record = new G_Group();
        record.groupname = fieldSetFlags()[0] ? this.groupname : (java.lang.String) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
