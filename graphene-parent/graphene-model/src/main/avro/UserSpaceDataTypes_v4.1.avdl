@namespace("graphene.model.idl")
/**
*/
protocol G_UserSpaceDataTypes {
	import idl "DataTypes_v4.1.avdl";
	import idl "SecurityDataTypes_v4.1.avdl";
	
	enum G_UserFields {
		id,active,username,avatar,email,fullname,hashedpassword,lastlogin,modified,created,numberlogins
	}
	
	record G_User {
		/** */
		boolean active = true;
		int id;
		string username = "notset";
		/**
		 * some id of an avatar (could be a file name or other string to look
		 * up)
		 */
		union {string, null} avatar = null;
		
		/** user's email */
		union {string, null} email = null;
		
		/** user's full name */
		union {string, null} fullname = null;
		
		/** user's hashed password */
		union {string, null} hashedpassword = null;
		
		/** user's lastlogin datetime */
		union { long, null} lastlogin = 0;
		
		/** user's modified datetime */
		union { long, null} modified = 0;
		
		/** user's account created datetime */
		union { long, null} created = 0;
		
		/** user's numberlogins */
		int numberlogins = 0;
	}
	
	enum G_GroupFields {
		id,name,description
	}
	
	record G_Group {
		int id;
		string name = "notset";
		string description = "notset";
	}
	
	enum G_WorkspaceFields {
		active,json,queries, datamap,description,title,id,modified,created
	}
	
	enum G_UserSpaceRelationshipType {
		CREATOR_OF, // For user to workspace relations
		EDITOR_OF, // For user to workspace relations
		REVIEWER_OF // For user to workspace relations
	}
	
	record G_Workspace {
		boolean active =true;
		union {string, null} description=null;
		union {string, null} json=null;
		union {string, null} queries=null;
		union {string, null} datamap=null;
		string title="untitled";
		
		int id;
			
		 /** workspace's modified datetime */
		union { long, null} modified = 0;
		 /** workspace's created datetime */
		union { long, null} created = 0;
			
	}
}
