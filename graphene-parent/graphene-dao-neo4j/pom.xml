<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>graphene-parent</artifactId>
		<groupId>graphene</groupId>
		<version>4.0.9-SNAPSHOT</version>
	</parent>
	<artifactId>graphene-dao-neo4j</artifactId>
	<name>${project.artifactId}</name>
	<properties>
	</properties>

	<repositories>
		<repository><!-- This is very, very strange. neo4j-rest-graphdb will not 
				resolve without this repo being included, even in offline mode! -->
			<id>mvn-neo4j</id>
			<url>http://m2.neo4j.org/content/groups/everything</url>
		</repository>
		<repository>
			<id>batch-insert-graphene-mvn-repo</id>
			<url>https://raw.github.com/danieljue/batch-import-graphene/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>batch-import</artifactId><!-- Note that for now, this is being 
				manually synced to the neo4j version used elsewhere. -->
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>graphene</groupId>
			<artifactId>graphene-model</artifactId>
		</dependency>
		<dependency>
			<groupId>graphene</groupId>
			<artifactId>graphene-dao</artifactId>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-rest-graphdb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-ioc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
		</dependency>

	</dependencies>

	<description>Module for Neo4J query implementations of DAOs in the core module.  Most classes make use of Cypher query language, but they can also use API or Cypher via REST.</description>
</project>
