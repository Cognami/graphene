#static Level	ALL 
#          The ALL has the lowest possible rank and is intended to turn on all logging.
#static Level	DEBUG 
#          The DEBUG Level designates fine-grained informational events that are most useful to debug an application.
#static Level	ERROR 
#          The ERROR level designates error events that might still allow the application to continue running.
#static Level	FATAL 
#          The FATAL level designates very severe error events that will presumably lead the application to abort.
#static Level	INFO 
#          The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.
#static Level	OFF 
#          The OFF has the highest possible rank and is intended to turn off logging.
#static Level	TRACE 
#          The TRACE Level designates finer-grained informational events than the DEBUG
#static int	TRACE_INT 
#          TRACE level integer value.
#static Level	WARN 
#          The WARN level designates potentially harmful situations.

# Default to info level output; this is very handy if you eventually use Hibernate as well.
log4j.debug=true
log4j.rootLogger=DEBUG, CON

log4j.appender.CON=org.apache.log4j.ConsoleAppender
log4j.appender.CON.layout=org.apache.log4j.PatternLayout
#log4j.appender.CON.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n
log4j.appender.CON.layout.ConversionPattern=%-5p [%t]: %m%n
# Service category names are the name of the defining module class
# and then the service id.
log4j.category.org.hibernate=INFO
log4j.org.hibernate.engine.jdbc.internal=ERROR

# Outputs a list of pages, components and mixins at startup.
log4j.category.org.apache.tapestry5.services.TapestryModule.ComponentClassResolver=INFO

# Outputs startup statistics; elapsed time to setup and initialize the registry, a list of
# available services, and a launch banner that includes the Tapestry version number.
log4j.category.org.apache.tapestry5.TapestryFilter=INFO
# Turn on some verbose debugging about everything in the application. This is nice initially,
# while getting everything set up.  You'll probably want to remove this once you are 
# up and running, replacing it with more selective debugging output.

# Turning on debug mode for a page's or component's transformer logger
# will show all of the code changes that occur when the
# class is loaded.

# log4j.category.tapestry.transformer.graphene.xfw.pages.Index=debug

# Turning on debug mode for a component's events logger will show all the events triggered on the
# component, and which component methods are invoked as a result.

# log4j.category.tapestry.events.graphene.xfw.pages.Index=debug

# Turning on trace mode for a page's render logger provides extended information about every step
# in rendering (this is not generally helpful).  Turning on debug mode will add a one-line
# summary that includes the elapsed render time, which can be useful in tracking down
# performance issues.

# log4j.category.tapestry.render.graphene.xfw.pages.Index=debug


